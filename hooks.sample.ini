; NOTE - This file is provided as an EXAMPLE blueprint ONLY!
; The phpNova main repository does not use this file in any way 
; as it does not require a hooks.ini file of its own.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;		      phpNova Modular Hooks File		;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Hooks for:  phpSomeModuleName

; This file specifies how the afore-mentioned module will be loaded by 
; the phpNova framework.

; Do NOT change this file manually unless you know what you're doing!

; Usage:
;	include : The PHP file(s) that need(s) to be included.  This is 
; 	relative to the path to the module.  Absolute paths are NOT recommended!  
;	You can specify as many "include = " lines as you want.  Use this 
; 	only for files that are considered OPTIONAL and that the module 
; 	can still be successfully loaded without!
; 
;	require : Same as include, except that phpNova will assume that 
; 	the module failed to load if this include was not successful.  
; 	If you're not sure which to use, USE THIS ONE!
; 	Also note that, if there is only one included file and you use 
; 	"include = ", phpNova will automatically assume you meant to use 
; 	"require = " instead.
; 
; 	class_include : A class name to be instantiated by phpNova.  If 
; 	failed, module will still load correctly.  If you're including a 
; 	procedural file that does not require instantiation, you don't need 
; 	to create a class_include entry for it.
; 
; 	class_require : Same as class_include, except that phpNova will 
; 	assume the module failed to load if this class instantiation fails.  
; 	Please see notes on "require" for further guidelines.
; 
; 	TODO - Mechanism for passing custom parameters to class instantiation.  
; 	This'll be fun....

; Note - You don't have to group the includes/requires with their respective 
; instantiations, but doing so is recommended for the sake of human-readability.

; Note - Double-quotes (") are recommended to avoid unpredictable behavior in the PHP INI parser.

[Hooks]

require = "somemodulename.class.php"
class_require = "SomeModuleName"

; Maybe this module comes with an optional feature that involves RSS feed parsing....
include = "magpierss/rss_fetch.inc"

; ....And since it's a procedural file, we don't need to add a class_include entry for it.
